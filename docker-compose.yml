version: '3.8'

services:
  # Main Node.js Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.node
    container_name: payday-backend
    ports:
      - "3000:3000"
    volumes:
      - ./backend:/usr/src/app
    environment:
      # For local dev, using local postgres. Railway secrets will be used in CI/CD.
      DATABASE_URL: "postgresql://payday:payday123@postgres:5432/payday_db"
      JWT_SECRET: "a-secure-secret-for-local-dev"
      REDIS_URL: "redis://redis:6379"
      PORT: 3000
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - payday-network

  # Passive Income Python API
  passive-api:
    build:
      context: ./backend
      dockerfile: Dockerfile.python
    container_name: payday-passive-api
    command: gunicorn passive_income_api:app --bind 0.0.0.0:5001
    ports:
      - "5001:5001"
    environment:
      REDIS_URL: "redis://redis:6379"
    depends_on:
      - redis
    restart: unless-stopped
    networks:
      - payday-network

  # Real Income Python API
  real-income-api:
    build:
      context: ./backend
      dockerfile: Dockerfile.python
    container_name: payday-real-income-api
    command: gunicorn real_income_apis:app --bind 0.0.0.0:5002
    ports:
      - "5002:5002"
    environment:
      # API Keys should be managed via .env file for local dev
      COUPANG_ACCESS_KEY: ""
      COUPANG_SECRET_KEY: ""
      YOUTUBE_API_KEY: ""
      NAVER_CLIENT_ID: ""
      NAVER_CLIENT_SECRET: ""
    restart: unless-stopped
    networks:
      - payday-network

  # Database & Cache
  postgres:
    image: postgres:15-alpine
    container_name: payday-postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: payday
      POSTGRES_PASSWORD: payday123
      POSTGRES_DB: payday_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U payday"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - payday-network

  redis:
    image: redis:7-alpine
    container_name: payday-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - payday-network

  # Nginx is commented out for now, can be configured later as an API gateway
  # nginx:
  #   image: nginx:alpine
  #   container_name: payday-nginx
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
  #     - ./nginx/ssl:/etc/nginx/ssl:ro
  #   depends_on:
  #     - backend
  #     - passive-api
  #     - real-income-api
  #   restart: unless-stopped
  #   networks:
  #     - payday-network

volumes:
  postgres_data:
  redis_data:

networks:
  payday-network:
    driver: bridge
